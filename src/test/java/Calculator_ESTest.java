/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 00:48:12 GMT 2022
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Calculator_ESTest extends Calculator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.sum(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.sum(3682561, (-3810));
      assertEquals(3678751, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.sub(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.sub(0, (-2031));
      assertEquals(2031, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.mult((-1919), (-1919));
      assertEquals(3682561, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.mult((-1), 3682561);
      assertEquals((-3682561), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.div(1, 259);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.div((-1735), 1);
      assertEquals((-1735), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      try { 
        calculator0.div(0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot div by zero
         //
         verifyException("Calculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.div((-1405), (-60));
      assertEquals(23, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.mult(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.sub((-1928), 0);
      assertEquals((-1928), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.sum((-1536), (-1928));
      assertEquals((-3464), int0);
  }
}
